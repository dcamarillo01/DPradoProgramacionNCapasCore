@model ML.UserProfile
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}



<container class="container shadow-lg rounded-4">
    <div class="row">
        <div class="col">
            <div class="row">
                <div class="col" style="padding-bottom:20px">
                    @if (Model.IdUserProfile > 0)
                    {
                        <h1>Editar cuenta</h1>
                        <div class="alert alert-warning">Este usuario ya tiene cuenta</div>

                    }
                    else
                    {
                        <h1>Crear cuenta</h1>
                    }
                </div>
                
                <div class="row shadow-lg rounded-3">
                    <div class="col " style="padding-top:20px">
                        @using (Html.BeginForm("FormUserProfile", "UserProfile", new { @class = "form-login" }))
                        {

                            <div hidden>
                                @Html.TextBoxFor(model => model.Empleado.IdEmpleado)
                            </div>
                            <div hidden>
                                @Html.TextBoxFor(model => model.IdUserProfile)
                            </div>

                            <div class="flex-column-login">
                                @Html.LabelFor(model => model.UserName, new { @class = "form-label" })

                            </div>
                            <div class="inputForm-login">
                                <svg height="20"
                                     viewBox="0 0 32 32"
                                     width="20"
                                     xmlns="http://www.w3.org/2000/svg">
                                    <g id="Layer_3" data-name="Layer 3">
                                        <path d="m30.853 13.87a15 15 0 0 0 -29.729 4.082 15.1 15.1 0 0 0 12.876 12.918 15.6 15.6 0 0 0 2.016.13 14.85 14.85 0 0 0 7.715-2.145 1 1 0 1 0 -1.031-1.711 13.007 13.007 0 1 1 5.458-6.529 2.149 2.149 0 0 1 -4.158-.759v-10.856a1 1 0 0 0 -2 0v1.726a8 8 0 1 0 .2 10.325 4.135 4.135 0 0 0 7.83.274 15.2 15.2 0 0 0 .823-7.455zm-14.853 8.13a6 6 0 1 1 6-6 6.006 6.006 0 0 1 -6 6z"></path>
                                    </g>
                                </svg>
                                @Html.TextBoxFor(model => model.UserName, new { @class = "input-login" })
                            </div>

                            <div class="flex-column-login">
                                @Html.LabelFor(model => model.Email, new { @class = "form-label" })

                            </div>
                            <div class="inputForm-login">
                                <svg height="20"
                                     viewBox="0 0 32 32"
                                     width="20"
                                     xmlns="http://www.w3.org/2000/svg">
                                    <g id="Layer_3" data-name="Layer 3">
                                        <path d="m30.853 13.87a15 15 0 0 0 -29.729 4.082 15.1 15.1 0 0 0 12.876 12.918 15.6 15.6 0 0 0 2.016.13 14.85 14.85 0 0 0 7.715-2.145 1 1 0 1 0 -1.031-1.711 13.007 13.007 0 1 1 5.458-6.529 2.149 2.149 0 0 1 -4.158-.759v-10.856a1 1 0 0 0 -2 0v1.726a8 8 0 1 0 .2 10.325 4.135 4.135 0 0 0 7.83.274 15.2 15.2 0 0 0 .823-7.455zm-14.853 8.13a6 6 0 1 1 6-6 6.006 6.006 0 0 1 -6 6z"></path>
                                    </g>
                                </svg>
                                @Html.TextBoxFor(model => model.Email, new { @class = "input-login" })
                            </div>

                            <div class="flex-column-login">
                                <label class="form-label">Password</label>

                            </div>
                            <div class="inputForm-login">
                                <svg height="20"
                                     viewBox="-64 0 512 512"
                                     width="20"
                                     xmlns="http://www.w3.org/2000/svg">
                                    <path d="m336 512h-288c-26.453125 0-48-21.523438-48-48v-224c0-26.476562 21.546875-48 48-48h288c26.453125 0 48 21.523438 48 48v224c0 26.476562-21.546875 48-48 48zm-288-288c-8.8125 0-16 7.167969-16 16v224c0 8.832031 7.1875 16 16 16h288c8.8125 0 16-7.167969 16-16v-224c0-8.832031-7.1875-16-16-16zm0 0"></path>
                                    <path d="m304 224c-8.832031 0-16-7.167969-16-16v-80c0-52.929688-43.070312-96-96-96s-96 43.070312-96 96v80c0 8.832031-7.167969 16-16 16s-16-7.167969-16-16v-80c0-70.59375 57.40625-128 128-128s128 57.40625 128 128v80c0 8.832031-7.167969 16-16 16zm0 0"></path>
                                </svg>
                                @Html.PasswordFor(model => model.PasswordHash, new { @class = "input-login" })

                            </div>

                            <div>
                                @Html.LabelFor(model => model.Rol.Roles)
                                @Html.DropDownListFor(model => model.Rol.IdRol, new SelectList(Model.Rol.Roles, "IdRol", "Nombre"), "Selecciona un Rol", new { @class = "form-control" })
                            </div>

                            @if (Model.IdUserProfile > 0)
                            {
                                <button class="button-submit-login" type="submit">Editar</button>

                            }
                            else
                            {
                                <button class="button-submit-login" type="submit">Registrar</button>


                            }

                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

</container>



